---
- name: S3 | Create release folder
  file:
    state: directory
    path: "{{ ansistrano_release_path.stdout }}"
  when: not ansistrano_s3_rgw

- name: Simple GET operation
  aws_s3:
    bucket: "{{ ansistrano_s3_bucket }}"
    object: "{{ ansistrano_s3_object }}"
    dest: "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}"
    mode: get
    aws_access_key: "{{ ansistrano_s3_aws_access_key | default(omit) }}"
    aws_secret_key: "{{ aws_secret_access_key | default(omit) }}"
    region: "{{ ansistrano_s3_region }}"
    ignore_nonexistent_bucket: "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"
  delegate_to: "{{item.host}}"
  with_items: "{{ansistrano_host}}"

# - name: S3 | Get object from S3
#   aws_s3:
#     bucket: "{{ ansistrano_s3_bucket }}"
#     object: "{{ ansistrano_s3_object }}"
#     dest: "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}"
#     mode: get
#     region: "{{ ansistrano_s3_region }}"
#     aws_access_key: "{{ ansistrano_s3_aws_access_key | default(omit) }}"
#     aws_secret_key: "{{ aws_secret_access_key | default(omit) }}"
#     ignore_nonexistent_bucket: "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"
#   when: not ansistrano_s3_rgw 

# - name: S3 | Get object from Ceph RGW
#   aws_s3:
#     rgw: true
#     s3_url: "{{ ansistrano_s3_url }}"
#     encrypt: "{{ ansistrano_s3_encrypt | default(false) }}"
#     bucket: "{{ ansistrano_s3_bucket }}"
#     object: "{{ ansistrano_s3_object }}"
#     dest: "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}"
#     mode: get
#     aws_access_key: "{{ ansistrano_s3_aws_access_key | default(omit) }}"
#     aws_secret_key: "{{ aws_secret_access_key | default(omit) }}"
#     ignore_nonexistent_bucket: "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"
#   when: not ansistrano_s3_rgw  
